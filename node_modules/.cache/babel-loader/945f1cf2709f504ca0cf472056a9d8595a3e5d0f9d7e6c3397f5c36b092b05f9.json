{"ast":null,"code":"import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\n\n//async func for fetching stored data from firebase\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://redux-test-project-2-default-rtdb.firebaseio.com/cart.json\", {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data.');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed.\"\n      }));\n    }\n  };\n};\n\n//async func for sending cart data to firebase\nexport const sendCartData = cart => {\n  return async dispatch => {\n    //shows first that the data in the cart is pending being sent\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data now!\"\n    }));\n    const sendRequest = async () => {\n      //then we send the data to the firebase backend\n      const response = await fetch(\"https://redux-test-project-2-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      //is there an error?\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {\n      await sendRequest();\n      //notification that data send was successful\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Cart data has been sent successfully!\"\n      }));\n    } catch (error) {\n      //catch any error that may have occurred and show error message\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","method","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","body","JSON","stringify"],"sources":["/Users/Alaina/projects/redux-test-project-2/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\n\n//async func for fetching stored data from firebase\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch(\"https://redux-test-project-2-default-rtdb.firebaseio.com/cart.json\", { method: 'GET'});\n            \n            if (!response.ok) {\n                throw new Error('Could not fetch cart data.');\n            }\n\n            const data = await response.json();\n\n            return data;\n        };\n\n        try {\n            const cartData = await fetchData();\n            dispatch(cartActions.replaceCart(cartData));\n        } catch (error) {\n            dispatch(\n                uiActions.showNotification({\n                  status: \"error\",\n                  title: \"Error!\",\n                  message: \"Fetching cart data failed.\",\n                })\n            );\n        }\n    };\n};\n\n//async func for sending cart data to firebase\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        //shows first that the data in the cart is pending being sent\n        dispatch(\n            uiActions.showNotification({\n                status: \"pending\",\n                title: \"Sending...\",\n                message: \"Sending cart data now!\",\n            })\n        );\n\n        const sendRequest = async () => {\n          //then we send the data to the firebase backend\n          const response = await fetch(\n            \"https://redux-test-project-2-default-rtdb.firebaseio.com/cart.json\",\n            { method: \"PUT\", body: JSON.stringify(cart) }\n          );\n\n          //is there an error?\n          if (!response.ok) {\n            throw new Error(\"Sending cart data failed!\");\n          }\n        };\n\n    try{\n        await sendRequest();\n        //notification that data send was successful\n       dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Cart data has been sent successfully!\",\n        })\n      );\n    } catch (error) {\n        //catch any error that may have occurred and show error message\n        dispatch(\n            uiActions.showNotification({\n              status: \"error\",\n              title: \"Error!\",\n              message: \"Sending cart data failed!\",\n            })\n          );\n    }\n\n    };\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;;AAE1C;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAoE,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAC,CAAC;MAEpH,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAElC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMR,SAAS,EAAE;MAClCD,QAAQ,CAACF,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZX,QAAQ,CACJH,SAAS,CAACe,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACL;IACL;EACJ,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOjB,QAAQ,IAAK;IACvB;IACAA,QAAQ,CACJH,SAAS,CAACe,gBAAgB,CAAC;MACvBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CAAC,CACL;IAED,MAAMG,WAAW,GAAG,YAAY;MAC9B;MACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAAoE,EACpE;QAAEC,MAAM,EAAE,KAAK;QAAEe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;MAAE,CAAC,CAC9C;;MAED;MACA,IAAI,CAACf,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAEL,IAAG;MACC,MAAMY,WAAW,EAAE;MACnB;MACDlB,QAAQ,CACPH,SAAS,CAACe,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZ;MACAX,QAAQ,CACJH,SAAS,CAACe,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACP;EAEA,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}